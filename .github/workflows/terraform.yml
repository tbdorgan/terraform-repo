name: Terraform Workflow

on:
  push:
    branches:
      - main  # Trigger when there is a push to `main`
  pull_request:
    branches:
      - main  # Trigger  pull requests targeting `main`

permissions:
  id-token: write # This is required for requesting the JWT
  #contents: read  # This is required for actions/checkout
  
jobs:
  terraform:
    runs-on: ubuntu-latest  # Use an Ubuntu runner for this job

    steps:
      # Checkout the repository to get the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform (using HashiCorp's setup-terraform action)
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.6  # Specify the Terraform version (adjust as needed)

      # Set up AWS IAM credentials (use OIDC for IAM role assumption)
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::657454854557:role/GitHubActionsRole  # Replace with your IAM role ARN
          aws-region: eu-west-2  # Set the AWS region where you want to deploy the infrastructure
          role-session-name: github-actions-session

      - name: Debug AWS credentials
        run: aws sts get-caller-identity

    
      # Initialize Terraform (downloads necessary plugins and sets up Terraform)
      - name: Terraform Init
        run: terraform init

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Plan Terraform changes
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Apply the Terraform plan to apply the changes to AWS
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        if: github.event_name == 'push'  # Ensure apply happens only on direct push to `main`
        
